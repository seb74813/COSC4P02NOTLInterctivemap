using Microsoft.AspNetCore.Http.HttpResults;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Localization;
using Microsoft.Extensions.Primitives;
using Notl.MuseumMap.Api.Models.Common;
using Notl.MuseumMap.Core.Common;
using System.Globalization;
using System.Net;

namespace Notl.MuseumMap.Api.Controllers
{
    /// <summary>
    /// Base controller for all API controllers.
    /// </summary>
    public class BaseController : Controller
    {
        /// <summary>
        /// Provides access to the download service options.
        /// </summary>
        protected readonly MuseumMapOptions options;

        /// <summary>
        /// Provides access to the logger.
        /// </summary>
        protected readonly ILogger logger;

        /// <summary>
        /// Constructs the BaseController with the required dependencies
        /// </summary>
        /// <param name="logger"></param>
        /// <param name="options"></param>
        protected BaseController(ILogger logger, MuseumMapOptions options)
        {
            this.logger = logger;
            this.options = options;
        }

        /// <summary>
        /// Handles any exception that's generated by the system and returns back an error page.
        /// </summary>
        /// <param name="ex"></param>
        /// <returns></returns>
        protected IActionResult HandleError(Exception ex)
        {
            var message = $"Request {Request.Path}?{Request.QueryString} generated an error.";
            logger.LogError(ex, message);

            if (ex is UnauthorizedAccessException)
            {
                return new UnauthorizedResult();
            }
            else
            {
                return new BadRequestObjectResult(new ErrorModel(ex));
            }
        }

    }
}
