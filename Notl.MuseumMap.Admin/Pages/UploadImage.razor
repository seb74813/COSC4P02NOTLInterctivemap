@page "/upload/{Id:guid}"
@inherits BasePage
@attribute [Authorize]

<BusyIndicator Model="@this"/>
<PageTitle>@Localizer["AppName"]</PageTitle>

@if (!IsBusy && map != null)
{
    <MudContainer MaxWidth="MaxWidth.Medium">
        <EditForm Model="map" OnValidSubmit="Submit">
            <MudPaper Class="justify-center pa-3 mt-3">
                <MudStack>
                    <MudText Class="ma-2" Typo="Typo.h4">
                        @Localizer["Text_NewMap"]
                    </MudText>
                    <MudTextField @bind-Value=map.Name Label="@Localizer["Label_MapName"]" />
                    @if (map.Image != null)
                    {
                        <MudImage 
                            Src="@map.Image.Url"
                            Fluid=true/>
                    }
                    else
                    {
                        <MudImage 
                            Src="placeholder.png"
                            Fluid=true/>
                    }
                    <MudStack Row=true>
                        <MudButton Variant="Variant.Filled"
                               Color="Color.Warning"
                               OnClick="Cancel">
                            @Localizer["Button_Cancel"]
                        </MudButton>
                        <MudSpacer />
                        <MudTooltip Text="@Localizer["ToolTip_UploadImage"]">
                            <MudButton HtmlTag="label"
                                   Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   StartIcon="@Icons.Material.Filled.CloudUpload"
                                   for="upload">
                                @Localizer["Button_UploadImage"]
                            </MudButton>
                        </MudTooltip>
                        <MudSpacer />
                        <MudTooltip Text="@Localizer["ToolTip_SaveMap"]">
                            <MudButton ButtonType="ButtonType.Submit"
                                   Variant="Variant.Filled">
                                @Localizer["Button_Save"]
                            </MudButton>
                        </MudTooltip>
                    </MudStack>
                </MudStack>
                <InputFile id="upload" accept="image/*" OnChange="UploadPhotoAsync" class="d-none"/>
            </MudPaper>
		</EditForm>
    </MudContainer>
}

@code {
    private MapModel? map;

    [Parameter]
    public Guid Id { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        IsInitialized = true;

        try
        {
            IsBusy = true;
            map = await ClientContext.Admin.GetMapAsync(Id);
            IsBusy = false;
        }
        catch (Exception ex)
        {
            ShowError(ex);
        }
    }

    public async Task UploadPhotoAsync(InputFileChangeEventArgs e)
    {
        try
        {
            if (map == null)
            {
                throw new Exception();
            }

            var file = e.File;

            var stream = file.OpenReadStream();

            IsBusy = true;
            map.Image = await ClientContext.Admin.UploadMapImageAsync(map.Id, new FileParameter(stream));
            IsBusy = false;
        }
        catch (Exception ex)
        {
            ShowError(ex);
        }
        StateHasChanged();
    }

    private async Task Submit()
    { 
        if (map == null)
        {
            throw new Exception();
        }

        if (!string.IsNullOrWhiteSpace(map.Name) && map.Image != null)
        {
            try
            {
                IsBusy = true;
                await ClientContext.Admin.UpdateMapAsync(map);
                IsBusy = false;
            }
            catch (Exception ex)
            {
                ShowError(ex);
            }

            Navigation.NavigateTo($"");
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo($"");
    }
}
