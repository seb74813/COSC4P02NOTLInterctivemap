@if (Data != null)
{
<div class="coordinate-button" style=@styleString()>
    @if (Data.PoiType == POIType.Exhibit)
    {
        <MudButton class="coordinate-exhibit" OnClick="Click" style="color: black;">
            @if (Data.Title != null)
            {
                @Data.Title
            }
            else
            {
                @Data.PoiType
            }
        </MudButton>
    }
    else
    {
        <MudIconButton class="coordinate-icon"
                Color="Color.Error"
                Icon=@getIcon()
                Size="Size.Small"
                OnClick="Click">
        </MudIconButton>
        <MudText class="coordinate-title">
            @if (Data.Title != null)
            {
                @Data.Title
            }
            else
            {
                @Data.PoiType
            }
        </MudText>
    }
</div>
}

@code {
    [Parameter]
    public POIModel? Data { get; set; }

    [Parameter]
    public EventCallback<POIModel> OnClick { get; set; }

    private string styleString()
    {
        if (Data != null)
        {
            return $"top: {Data.Y}px; left: {Data.X}px;";
        }
        return "";
    }

    private string getIcon()
    {
        if (Data != null)
        {
            switch (Data.PoiType)
            {
                case POIType.Exhibit:
                    return Icons.Material.Filled.Map;
                case POIType.Item:
                    return Icons.Material.Filled.LocationOn;
                case POIType.Bathroom:
                    return Icons.Material.Filled.FamilyRestroom;
                case POIType.Accessability:
                    return Icons.Material.Filled.Accessible;
            }
        }
        return "";
    }

    private async Task Click()
    {
        await OnClick.InvokeAsync(Data);
    }
}
